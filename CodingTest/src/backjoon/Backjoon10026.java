package backjoon;
//10026 적록색약
//https://www.acmicpc.net/problem/10026
import java.util.Scanner;

public class Backjoon10026 {
	static int n;
	static char[][] graph;
	static boolean[][] visited;
	static int count = 0;
	static int[][] pos = { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 } };

	static void dfs(int x, int y) {
		visited[x][y] = true;
		char temp = graph[x][y];
		for (int i = 0; i < pos.length; i++) {
			int nx = x + pos[i][0];
			int ny = y + pos[i][1];

			if (nx >= 0 && nx < n && ny >= 0 && ny < n && !visited[nx][ny] && graph[nx][ny] == temp) {
				dfs(nx, ny);
			}
		}

	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		n = sc.nextInt();
		graph = new char[n][n];
		visited = new boolean[n][n];

		for (int i = 0; i < n; i++) {
			String str = sc.next();
			for (int j = 0; j < n; j++) {
				graph[i][j] = str.charAt(j);
			}
		}

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (!visited[i][j]) {
					dfs(i, j);
					count++;
				}
			}
		}
		System.out.print(count + " ");
		count = 0;
		visited = new boolean[n][n];

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (graph[i][j] == 'G') {
					graph[i][j] = 'R';
				}
			}
		}

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (!visited[i][j]) {
					dfs(i, j);
					count++;
				}
			}
		}

		System.out.println(count);

	}
}
